<div id="welcome" class="container">
  <div class="row">
    <div class="col s12 center-align">
      <h1> How are you feeling? </h1>
      <p class="flow-text"> Click the button below to get started.</p>
      <a id="trigger-modal" class="btn-floating btn-large modal-trigger" href="#feelings-modal"><i class="material-icons">edit</i></a>
    </div>
  </div>	
</div>

<!-- Modal Structure -->
<div id="feelings-modal" class="modal">
  <div class="modal-content">
    <form id="feelings-input">
      <div class="row">
        <div class="col s10">
          <input type="text" placeholder="How are you feeling?">
        </div>
        <div style="padding-top:15px;" class="col s2">
          <div class="icons right">
            <i class="material-icons add">add_circle</i>
          </div>
        </div>
      </div>
    </form>
    <div class="modal-footer">
      <a id="form-submission" href="#!" class="modal-action btn right">Ok time to pop!</a>
    </div>
  </div>
</div>

<div class="canvas-container">
  <canvas id="myCanvas" resize="true"></canvas>
</div>

<script>
// Setup the modal trigger to work

$(document).ready(function(){
  // the "href" attribute of .modal-trigger must specify the modal ID that wants to be triggered
  $('.modal-trigger').leanModal();
});

// Give the canvas a width and height

$(document).ready(function(){
  $('.canvas-container').height($(window).height() - $('nav').height());
  $('.canvas-container').width($(window).width());
 });

$(window).resize(function(){
  $('.canvas-container').height($(window).height() - $('nav').height());
  $('.canvas-container').width($(window).width());
});

</script>

<script type="text/paperscript" style="display:none;" canvas="myCanvas">

// GLOBAL VARIABLES

var feelings = [];
var session_id;
var sound = true;
var audio = new Audio('blop.mp3');
var feelingsCount = 0;

//
// FUNCTIONS FOR FORM
//

// DELETING INPUT

$('form').on( "click", '.material-icons.delete', function() {
  $(this).closest('.row').slideUp(200, function(){ 
    $(this).remove();
    if( $('form .icons:last-child .material-icons.add').last().length === 0 ){
      $('form .row:last-child .icons.right').append('<i class="material-icons add">add_circle</i>');
    }
  });
});

// ADDING INPUT

$('form').on( "click", '.material-icons.add', function() {
  $(this).remove();
  $("<%= escape_javascript(render partial: 'form') %>").appendTo('form').hide().slideDown(200);
});

// PREVENTING PRESSING ENTER

$(document).ready(function() {
  $('.modal input').keydown(function(event){
    if(event.keyCode == 13) {
      triggerGame();
      event.preventDefault();
    }
  });
});

// SUBMITTING THE FORM

$( "#form-submission" ).on('click', function(event) {
  triggerGame();
  event.preventDefault();
});

// WILL SET OFF THE TRIGGER FOR THE GAME

function triggerGame(){
  var filledOut;
  feelings = []
  $('#feelings-input').find('input').each(function () {
    if($(this).val() === ""){
      $(this).attr("placeholder", "Hey this can't be empty!");
      filledOut = false;
      return false;
    }
    else {
      filledOut = true;
      feelings.push(this.value);
    }
  });
  if(filledOut){
    $('#feelings-modal').closeModal();
    game();
  }
}

//
// MODAL STUFF
//

// STARTING UP THE MODAL

$('#trigger-modal').click(function(){
  if($(this).hasClass('modal-nav') === false){
    var clone = $(this).clone();
    $(this).closest('.container').fadeOut(100, function(){
      $(this).closest('.container').remove();
      var new_button = $('<li><a id="trigger-modal" class="modal-trigger" href="#feelings-modal"><i class="material-icons">edit</i></a></li>').prependTo('#right-links').hide();
      $(new_button).addClass('modal-nav')
      $(new_button).fadeIn(100);
      $('.modal-trigger').leanModal();
    });
  }
});

//
// SOUND STUFF
//

// ADDING SOUND LINK TO THE RIGHT LINKS IN NAVBAR

$('#right-links').append('<li><a id="sound" href="#"><i class="material-icons">volume_up</i></a></li>');


// MUTING AND UNMUTING THE GAME

$('#sound').click(function(){
  sound = !sound;
  if(sound){
    $(this).html('<i class="material-icons">volume_up</i>');
  }
  else {
    $(this).html('<i class="material-icons">volume_off</i>');
  }
});

// ADDING CURRENT FEELINGS COUNT

// $(document).ready(function(){
//   $('#count-links').prepend('<li><a id="feelings-count" href="#"><i class="material-icons left">cloud_upload</i><span>0</span></a></li>');
// })

// function update_count(count, id){
//   var oldCount = +$("#"+id +' span').text();
//   if (count !== oldCount){
//     $("#"+id +' span').text(count);
//   }
// }

// ENDING THE SESSION

$( window ).unload(function() {
  clearInterval(timer)
  if (session_id !== undefined){
   $.ajax({
     url: "/session/end",
     method: "PUT",
     async: false,
     data: { session_id: session_id}
   });
 }
});

var destination = Point.random() * view.size;
var paused = true;
var gameCount = 0;

function game(){
  if(session_id === undefined) {
   $.ajax({
    url: "/session/create",
    method: "POST",
    data: {},
    dataType: "json",
    success: function ( msg ) {
      session_id = msg.id;
    }
   });
  }
  paused = false;
  if(gameCount > 0){
    project.activeLayer.lastChild.remove();
  }
  $('canvas').show();
  createCloud();
  gameCount += 1;
}

function createCloud(){
  // group to combine text and cloud
  group = new Group();
  
  // starting points of the group
  var point = Point.random()*view.size;

  // Add the text for the cloud first to calculate width
  var text = new PointText();
  text.justification = 'center';
  text.fillColor = '#34495e';
  text.content = randomArray(feelings);
  text.fontSize = 14;
  group.addChild(text);
  // hide the text for now just to be safe
  text.visible = false;
  
  // create the cloud
  // path for cloud below
  var pathData = 'M -25,-20 a 20,20 1 0,0 0,40 h 50 a 20,20 1 0,0 0,-40 a 10,10 1 0,0 -15,-10 a 15,15 1 0,0 -35,10 z';
  var path = new Path(pathData); 
  path.fillColor = '#ecf0f1'
  path.position = new Point(point['x'],point['y']);
  path.insertBelow(text);
  
  // putting it all together
  // change the size of the cloud to fit the text width
  var scale = cloudScale(text.bounds.width);
  path.scale(scale)
  // center the text vertically in the  cloud
  text.position = new Point(point['x'], point['y'] + centerText(scale));
  text.visible = true;
  
  group.onMouseDown = function(event) {
    feelingsCount += 1;
    update_count(feelingsCount,'feelings-count')
    if (sound){
      audio.play();
    }
    $.ajax({
      url: "/feeling",
      method: "POST",
      data: { text : text.content, session_id : session_id },
      dataType: "html"
    });
    this.remove();
    destination = Point.random() * view.size;
    createCloud();
  }
}

function onFrame(event) {
  if(!paused){
    var vector = destination - project.activeLayer.lastChild.position;
    project.activeLayer.lastChild.position += vector / 30;
    if (vector.length < 5) {
      destination = Point.random() * view.size;
    }
  }
}

function centerText(scale){
  // center the text vertically in the cloud
  return scale * 11
}

function cloudScale(textWidth){
  // constant based on a padding for text that looked good
  var scale = textWidth * 0.01416712819;
  if(scale <= 0.8){ scale = 0.8; }
  return scale;
}

function randomArray(array){
 return array[Math.floor(Math.random()*array.length)];
}

</script>